// Code generated by mockery v2.10.2. DO NOT EDIT.

package mocks

import (
	context "context"

	io "io"

	minio "github.com/minio/minio-go/v7"

	mock "github.com/stretchr/testify/mock"
)

// MinioClient is an autogenerated mock type for the MinioClient type
type MinioClient struct {
	mock.Mock
}

// PutObject provides a mock function with given fields: _a0, _a1, _a2, _a3, _a4, _a5
func (_m *MinioClient) PutObject(_a0 context.Context, _a1 string, _a2 string, _a3 io.Reader, _a4 int64, _a5 minio.PutObjectOptions) (minio.UploadInfo, error) {
	ret := _m.Called(_a0, _a1, _a2, _a3, _a4, _a5)

	var r0 minio.UploadInfo
	if rf, ok := ret.Get(0).(func(context.Context, string, string, io.Reader, int64, minio.PutObjectOptions) minio.UploadInfo); ok {
		r0 = rf(_a0, _a1, _a2, _a3, _a4, _a5)
	} else {
		r0 = ret.Get(0).(minio.UploadInfo)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string, io.Reader, int64, minio.PutObjectOptions) error); ok {
		r1 = rf(_a0, _a1, _a2, _a3, _a4, _a5)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StatObject provides a mock function with given fields: _a0, _a1, _a2, _a3
func (_m *MinioClient) StatObject(_a0 context.Context, _a1 string, _a2 string, _a3 minio.GetObjectOptions) (minio.ObjectInfo, error) {
	ret := _m.Called(_a0, _a1, _a2, _a3)

	var r0 minio.ObjectInfo
	if rf, ok := ret.Get(0).(func(context.Context, string, string, minio.GetObjectOptions) minio.ObjectInfo); ok {
		r0 = rf(_a0, _a1, _a2, _a3)
	} else {
		r0 = ret.Get(0).(minio.ObjectInfo)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string, minio.GetObjectOptions) error); ok {
		r1 = rf(_a0, _a1, _a2, _a3)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
